print("=== PLAIN GAUSSIAN ===")
soe = SystemOfEquations([[1,2,3],[4,2,2],[1,1,1]], [6,6,6])
soe.plain_gaussian_elimination()
print("SOE: ")
print(soe)
print("Solution: ")
print(soe.backward_substitution())

try:
  soe = SystemOfEquations([[0,2,3],[4,2,2],[1,1,1]], [6,6,6])
  soe.plain_gaussian_elimination()
  print("\nSOE with [0][0] zero: ")
  print(soe)
  print("Solution: ")
  print(soe.backward_substitution())
except ZeroDivisionError:
  print("ERROR: Division by zero")

soe = SystemOfEquations([[4,2,2],[0,2,3],[1,1,1]], [6,6,6])
soe.plain_gaussian_elimination()
print("\nSOE with [1][0] zero: ")
print(soe)
print("Solution: ")
print(soe.backward_substitution())

print("\n=== PARTIAL PIVOTING GAUSSIAN ===")
soe = SystemOfEquations([[1,2,3],[4,2,2],[1,1,1]], [6,6,6])
soe.partial_pivoting_gaussian_elimination()
print("SOE: ")
print(soe)
print("Solution: ")
print(soe.backward_substitution())

soe = SystemOfEquations([[0,2,3],[4,2,2],[1,1,1]], [6,6,6])
soe.partial_pivoting_gaussian_elimination()
print("\nSOE with [0][0] zero: ")
print(soe)
print("Solution: ")
print(soe.backward_substitution())

soe = SystemOfEquations([[4,2,2],[0,2,3],[1,1,1]], [6,6,6])
soe.partial_pivoting_gaussian_elimination()
print("\nSOE with [1][0] zero: ")
print(soe)
print("Solution: ")
print(soe.backward_substitution())

print("\n=== TRIDIAGONAL SOE ===")
print(f"A:\n[1,2,0]\n[3,4,5]\n[0,6,7]")
print("\nSolutions for [6, 6, 6]: ")
soe = SystemOfEquations([[1,2,0],[3,4,5],[0,6,7]], [6,6,6])
soe.plain_gaussian_elimination()
print("SystemOfEquations class: ", end="")
print(soe.backward_substitution())
print("Tridiagonal class: ", end="")
triag_soe = tridiagonalSOE([0,3,6], [1,4,7], [2,5,0], [6,6,6])
triag_soe.plain_gaussian_elimination()
print(triag_soe.backward_substitution())

print("\nSolutions for [10, 10, 10]: ")
soe_2 = SystemOfEquations([[1,2,0],[3,4,5],[0,6,7]], [10,10,10])
soe_2.plain_gaussian_elimination()
print("SystemOfEquations class: ", end="")
print(soe_2.backward_substitution())
print("Tridiagonal class, using set_new_d: ", end="")
triag_soe.set_new_d([10,10,10])
print(triag_soe.backward_substitution())
print()
